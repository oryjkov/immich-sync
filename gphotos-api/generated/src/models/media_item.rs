/*
 * Google Photos API
 *
 * API for accessing Google Photos functionalities.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MediaItem {
    /// Identifier of the media item.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Description of the media item.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// URL to the media item.
    #[serde(rename = "productUrl", skip_serializing_if = "Option::is_none")]
    pub product_url: Option<String>,
    /// Base URL to download the media item.
    #[serde(rename = "baseUrl", skip_serializing_if = "Option::is_none")]
    pub base_url: Option<String>,
    /// MIME type of the media item.
    #[serde(rename = "mimeType", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    #[serde(rename = "mediaMetadata", skip_serializing_if = "Option::is_none")]
    pub media_metadata: Option<Box<models::MediaItemMediaMetadata>>,
    #[serde(rename = "contributorInfo", skip_serializing_if = "Option::is_none")]
    pub contributor_info: Option<Box<models::MediaItemContributorInfo>>,
    /// filename of the original media item.
    #[serde(rename = "filename", skip_serializing_if = "Option::is_none")]
    pub filename: Option<String>,
}

impl MediaItem {
    pub fn new() -> MediaItem {
        MediaItem {
            id: None,
            description: None,
            product_url: None,
            base_url: None,
            mime_type: None,
            media_metadata: None,
            contributor_info: None,
            filename: None,
        }
    }
}

