/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.106.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MapTheme {
    #[serde(rename = "light")]
    Light,
    #[serde(rename = "dark")]
    Dark,

}

impl ToString for MapTheme {
    fn to_string(&self) -> String {
        match self {
            Self::Light => String::from("light"),
            Self::Dark => String::from("dark"),
        }
    }
}

impl Default for MapTheme {
    fn default() -> MapTheme {
        Self::Light
    }
}

