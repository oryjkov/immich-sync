/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.106.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ToneMapping {
    #[serde(rename = "hable")]
    Hable,
    #[serde(rename = "mobius")]
    Mobius,
    #[serde(rename = "reinhard")]
    Reinhard,
    #[serde(rename = "disabled")]
    Disabled,

}

impl ToString for ToneMapping {
    fn to_string(&self) -> String {
        match self {
            Self::Hable => String::from("hable"),
            Self::Mobius => String::from("mobius"),
            Self::Reinhard => String::from("reinhard"),
            Self::Disabled => String::from("disabled"),
        }
    }
}

impl Default for ToneMapping {
    fn default() -> ToneMapping {
        Self::Hable
    }
}

