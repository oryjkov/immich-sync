/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.106.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TranscodePolicy {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "optimal")]
    Optimal,
    #[serde(rename = "bitrate")]
    Bitrate,
    #[serde(rename = "required")]
    Required,
    #[serde(rename = "disabled")]
    Disabled,

}

impl ToString for TranscodePolicy {
    fn to_string(&self) -> String {
        match self {
            Self::All => String::from("all"),
            Self::Optimal => String::from("optimal"),
            Self::Bitrate => String::from("bitrate"),
            Self::Required => String::from("required"),
            Self::Disabled => String::from("disabled"),
        }
    }
}

impl Default for TranscodePolicy {
    fn default() -> TranscodePolicy {
        Self::All
    }
}

