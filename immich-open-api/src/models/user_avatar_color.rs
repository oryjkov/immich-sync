/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.106.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UserAvatarColor {
    #[serde(rename = "primary")]
    Primary,
    #[serde(rename = "pink")]
    Pink,
    #[serde(rename = "red")]
    Red,
    #[serde(rename = "yellow")]
    Yellow,
    #[serde(rename = "blue")]
    Blue,
    #[serde(rename = "green")]
    Green,
    #[serde(rename = "purple")]
    Purple,
    #[serde(rename = "orange")]
    Orange,
    #[serde(rename = "gray")]
    Gray,
    #[serde(rename = "amber")]
    Amber,

}

impl ToString for UserAvatarColor {
    fn to_string(&self) -> String {
        match self {
            Self::Primary => String::from("primary"),
            Self::Pink => String::from("pink"),
            Self::Red => String::from("red"),
            Self::Yellow => String::from("yellow"),
            Self::Blue => String::from("blue"),
            Self::Green => String::from("green"),
            Self::Purple => String::from("purple"),
            Self::Orange => String::from("orange"),
            Self::Gray => String::from("gray"),
            Self::Amber => String::from("amber"),
        }
    }
}

impl Default for UserAvatarColor {
    fn default() -> UserAvatarColor {
        Self::Primary
    }
}

